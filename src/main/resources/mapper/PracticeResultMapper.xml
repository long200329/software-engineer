<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.se.software_engineer.dao.PracticeResultMapper">
  <resultMap id="BaseResultMap" type="com.se.software_engineer.entity.PracticeResult">
    <constructor>
      <idArg column="practice_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="course_id" javaType="java.lang.String" jdbcType="INTEGER" />
      <arg column="score" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="answer" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    practice_id, id, course_id, score, answer
  </sql>
  <select id="selectByExample" parameterType="com.se.software_engineer.entity.PracticeResultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from practice_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.se.software_engineer.entity.PracticeResultKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from practice_result
    where practice_id = #{practiceId,jdbcType=VARCHAR}
      and id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.se.software_engineer.entity.PracticeResultKey">
    delete from practice_result
    where practice_id = #{practiceId,jdbcType=VARCHAR}
      and id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.se.software_engineer.entity.PracticeResultExample">
    delete from practice_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.se.software_engineer.entity.PracticeResult">
    insert into practice_result (practice_id, id, course_id, 
      score, answer)
    values (#{practiceId,jdbcType=VARCHAR}, #{id,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, 
      #{score,jdbcType=DECIMAL}, #{answer,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.se.software_engineer.entity.PracticeResult">
    insert into practice_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="practiceId != null">
        practice_id,
      </if>
      <if test="id != null">
        id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="answer != null">
        answer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="practiceId != null">
        #{practiceId,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.se.software_engineer.entity.PracticeResultExample" resultType="java.lang.Long">
    select count(*) from practice_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update practice_result
    <set>
      <if test="record.practiceId != null">
        practice_id = #{record.practiceId,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=DECIMAL},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update practice_result
    set practice_id = #{record.practiceId,jdbcType=VARCHAR},
      id = #{record.id,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=DECIMAL},
      answer = #{record.answer,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.se.software_engineer.entity.PracticeResult">
    update practice_result
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
    </set>
    where practice_id = #{practiceId,jdbcType=VARCHAR}
      and id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.se.software_engineer.entity.PracticeResult">
    update practice_result
    set course_id = #{courseId,jdbcType=VARCHAR},
      score = #{score,jdbcType=DECIMAL},
      answer = #{answer,jdbcType=VARCHAR}
    where practice_id = #{practiceId,jdbcType=VARCHAR}
      and id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>